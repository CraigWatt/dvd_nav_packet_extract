name: Build and Test dvd_nav_packet_extract

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool pkg-config # Linux
          brew install autoconf automake libtool pkg-config # macOS
          # Add VLC dependencies or other requirements

      - name: Set up dependencies on Windows
        if: runner.os == 'Windows'
        run: |
          choco install autoconf automake libtool # Assuming you're using Chocolatey
          # Add other Windows-specific dependencies

      - name: Build the project on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          ./autogen.sh # If you're using Autoconf
          make build

      - name: Build the project on Windows
        if: runner.os == 'Windows'
        run: |
          # Add the Windows build command, e.g., using Visual Studio tools or Makefile if supported on Windows
          make build

      - name: Run tests
        run: make test  # Replace with actual test command

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'tags')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: |
          sudo apt-get install gh
          gh auth login --with-token ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        run: gh release create ${{ github.ref }} --notes "Release notes here"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dvd_nav_packet_extract-${{ github.ref }}
          path: ./path/to/your/build/artifacts
